apiVersion: v1
kind: Secret
metadata:
  name: {{ include "edt-service.fullname" . }}-jum-database
type: Opaque
data:
  # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
    {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace "jum-database") | default dict }}
    {{- $secretUser := (get $secretObj "DB_USER") | default dict }}
    {{- $secretPassword := (get $secretObj "DB_PASSWORD") | default dict}}

    # set $jwtSecret to existing secret data or generate a random one when not exists
    {{- $userSecret := (get $secretPassword "DB_PASSWORD") | default (randAlphaNum 32 | b64enc) }}
    {{- $passwordSecret := (get $secretPassword "DB_USER") | default (randAlphaNum 16 | b64enc) }}

    DB_PASSWORD: {{ $passwordSecret | quote }}
    DB_USER: {{ $userSecret | quote }}